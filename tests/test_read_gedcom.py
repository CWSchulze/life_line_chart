# import pytest
# from life_line_chart import GedcomParsing
from life_line_chart import ReadGedcom
import os
import sys


def test_read_sample_file():
    data = ReadGedcom.read_data(os.path.join(
        os.path.dirname(__file__), 'gramps_sample.ged'))
    assert len(data[0]) == 42
    assert len(data[1]) == 15
    assert str(data[0]['@I1@']) == "OrderedDict([('tag_data', 'INDI'), ('NAME', OrderedDict([('tag_data', 'Keith Lloyd /Smith/'), ('GIVN', OrderedDict([('tag_data', 'Keith Lloyd')])), ('SURN', OrderedDict([('tag_data', 'Smith')]))])), ('SEX', OrderedDict([('tag_data', 'M')])), ('BIRT', OrderedDict([('tag_data', ''), ('TYPE', OrderedDict([('tag_data', 'Birth of Keith Lloyd Smith')])), ('DATE', OrderedDict([('tag_data', '11 AUG 1966')])), ('PLAC', OrderedDict([('tag_data', 'San Francisco, San Francisco Co., CA')]))])), ('FAMC', OrderedDict([('tag_data', '@F8@')])), ('CHAN', OrderedDict([('tag_data', ''), ('DATE', OrderedDict([('tag_data', '21 DEC 2007'), ('TIME', OrderedDict([('tag_data', '01:35:26')]))]))]))])"
    assert str(data[1]['@F1@']) == "OrderedDict([('tag_data', 'FAM'), ('HUSB', OrderedDict([('tag_data', '@I27@')])), ('WIFE', OrderedDict([('tag_data', '@I25@')])), ('MARR', OrderedDict([('tag_data', ''), ('TYPE', OrderedDict([('tag_data', 'Marriage of Ingeman Smith and Marta Ericsdotter')])), ('DATE', OrderedDict([('tag_data', 'ABT 1790')])), ('PLAC', OrderedDict([('tag_data', 'Sweden')]))])), ('CHIL', OrderedDict([('tag_data', '@I39@')])), ('CHAN', OrderedDict([('tag_data', ''), ('DATE', OrderedDict([('tag_data', '21 DEC 2007'), ('TIME', OrderedDict([('tag_data', '01:35:26')]))]))]))])"


def test_read_testdata_file():
    data = ReadGedcom.read_data(os.path.join(
        os.path.dirname(__file__), 'autogenerated.ged'))
    assert len(data[0]) == 1361
    assert len(data[1]) == 498
    assert str(data[0]['@I1@']) == "OrderedDict([('tag_data', 'INDI'), ('NAME', OrderedDict([('tag_data', 'Stephen /Demetro/')])), ('SEX', OrderedDict([('tag_data', 'M')])), ('BIRT', OrderedDict([('tag_data', ''), ('DATE', OrderedDict([('tag_data', '1 JUN 1001')])), ('PLAC', OrderedDict([('tag_data', 'Paris')]))])), ('DEAT', OrderedDict([('tag_data', ''), ('DATE', OrderedDict([('tag_data', '1 JUN 1060')])), ('PLAC', OrderedDict([('tag_data', 'Bruegge')]))])), ('FAMS', OrderedDict([('tag_data', '@F1@')]))])"
    assert str(data[1]['@F1@']) == "OrderedDict([('tag_data', 'FAM'), ('HUSB', OrderedDict([('tag_data', '@I1@')])), ('WIFE', OrderedDict([('tag_data', '@I2@')])), ('MARR', OrderedDict([('tag_data', ''), ('DATE', OrderedDict([('tag_data', '1 MAY 1021')])), ('PLAC', OrderedDict([('tag_data', 'Tokio')]))])), ('CHIL', OrderedDict([('tag_data', '@I3@\\n@I4@\\n@I5@')]))])"

